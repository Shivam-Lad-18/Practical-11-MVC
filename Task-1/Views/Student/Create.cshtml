@model Task_1.Models.Student

@{
    ViewBag.Title = "Create Student";
}

<div class="container mt-4">
    <h2 class="text-center text-primary fw-bold">Create Student</h2>

    @using (Html.BeginForm("Create", "Student", FormMethod.Post, new { @class = "needs-validation", novalidate = "true" }))
    {
        @Html.AntiForgeryToken()

        <div class="card shadow p-4">
            <h4 class="text-success fw-bold">Student Details</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="mb-3">
                @Html.LabelFor(model => model.Name, new { @class = "form-label fw-semibold" })
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter full name" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>

            <div class="mb-3">
                @Html.LabelFor(model => model.DateOfBirth, new { @class = "form-label fw-semibold" })
                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
            </div>

            <div class="mb-3">
                @Html.LabelFor(model => model.Address, new { @class = "form-label fw-semibold" })
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter address" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>

            <div class="mb-3">
                @Html.LabelFor(model => model.Phone, new { @class = "form-label fw-semibold" })
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter phone number", type = "tel" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>

            <div class="mb-3">
                @Html.LabelFor(model => model.Email, new { @class = "form-label fw-semibold" })
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter email", type = "email" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>

            <div class="text-center mt-3">
                <button type="submit" class="btn btn-success px-4 fw-bold">Create</button>
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary ms-2" })
            </div>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
