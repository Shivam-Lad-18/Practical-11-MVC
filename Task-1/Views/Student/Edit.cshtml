@model Task_1.Models.Student

@{
    ViewBag.Title = "Edit Student";
}

<div class="container mt-4">
    <h2 class="text-primary">Edit Student</h2>

    @using (Html.BeginForm("Edit", "Student", FormMethod.Post, new { @class = "card p-4 shadow-sm bg-white rounded" }))
    {
        @Html.AntiForgeryToken()

        <h4 class="text-secondary">Student Details</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="mb-3">
            @Html.LabelFor(model => model.Name, new { @class = "form-label fw-bold" })
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3">
            @Html.LabelFor(model => model.DateOfBirth, new { @class = "form-label fw-bold" })
            <input type="date" class="form-control" id="DateOfBirth" name="DateOfBirth" value="@Model.DateOfBirth.ToString("yyyy-MM-dd")" />
            @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3">
            @Html.LabelFor(model => model.Address, new { @class = "form-label fw-bold" })
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3">
            @Html.LabelFor(model => model.Phone, new { @class = "form-label fw-bold" })
            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3">
            @Html.LabelFor(model => model.Email, new { @class = "form-label fw-bold" })
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>

        <div class="d-flex justify-content-between">
            <input type="submit" value="Save" class="btn btn-success px-4" />
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary px-4" })
        </div>
    }

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
